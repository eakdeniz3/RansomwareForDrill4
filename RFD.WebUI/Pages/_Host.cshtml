@page "/"
@namespace RFD.WebUI.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>RFD.WebUI</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="RFD.WebUI.styles.css" rel="stylesheet" />
    <link href="/assets/plugins/global/plugins.bundle.css" rel="stylesheet" />
    <link href="/assets/css/style.bundle.css" rel="stylesheet" />
</head>
<body>
    <component type="typeof(App)" render-mode="Server" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="/ckeditor/ckeditor.js"></script>
    <script src="/js/CKEditorInterop.js"></script>
    @*<script src="~/assets/css/style.bundle.js"></script>
        <script src="~/assets/plugins/global/plugins.bundle.js"></script>*@

    <script src="_framework/blazor.server.js"></script>
    <script>
                  

                            window.outsideClickHandler = {
            addEvent: function (elementId, dotnetHelper) {
                 //var glob = GLOBALLIST.find(x => x.Id === elementId);
                window.addEventListener("click", (e) => {
                    if (!document.getElementById(elementId).contains(e.target)) {
                        dotnetHelper.invokeMethodAsync('MetronicPopupClose');
                    }
                });
            }
        };





                            //function SelectClose(id) {
                            //    var glob = GLOBALLIST.find(x => x.Id === id);
                            //    var parent = document.getElementById(id);



                            //    setTimeout(function () {
                            //        var chield = document.activeElement;
                            //        if (!isChild(parent,chield)) {
                            //            glob.DotNetReference.invokeMethodAsync('MetronicPopupClose', glob.DotNetReference);
                            //        }

                            //    }, 1);




                            //}






                            //function isChild(parent, child) {

                            //    let node = child.parentNode;
                            //    while (node) {
                            //        if (node === parent) {
                            //            return true;
                            //        }
                            //        node = node.parentNode;
                            //    }
                            //    return false;
                            //};
    </script>
</body>
</html>
